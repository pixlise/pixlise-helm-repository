# Namespaced Role for dispatching pods (read/write pods/secrets in same namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dispatcher
rules:
  - apiGroups:
      - ""
      - "batch"
    resources:
      - "pods"
      - "secrets"
    verbs:
      - "list"
      - "get"
      - "watch"
      - "create"
      - "delete"
{{- if .Values.serviceAccount.create }}  # START service account/role-binding
---
# Service account to be used by pods in this deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "pixlise.serviceAccountName" . }}
  {{- if .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml .Values.serviceAccount.annotations | nindent 4 }}
  {{- end }}
---
# Binds this namespaced SA to the similarly namespaced dispatcher Role
# (allows namespaced pod to deploy new pods in its own namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "pixlise.serviceAccountName" . }}-dispatcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dispatcher
subjects:
  - kind: ServiceAccount
    name: {{ include "pixlise.serviceAccountName" . }}
---
# Binds this namespaced SA to the ClusterRole for dispatching pods to the piquant-map namespace
# (allows namespaced pod to deploy new pods to the piquant-map namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Namespace }}-dispatcher-piquant-map
  namespace: piquant-map
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-dispatcher
subjects:
- kind: ServiceAccount
  name: {{ include "pixlise.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}  # END service account/role-binding
